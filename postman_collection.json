{
	"info": {
		"_postman_id": "963e5f61-51db-44dd-805c-7df2520d77c8",
		"name": "EWD Ass2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11446383",
		"_collection_link": "https://red-star-180997.postman.co/workspace/EWD-Assignment-2~9c2dc4a8-4eda-4d85-b507-a465702d8b75/collection/11446383-963e5f61-51db-44dd-805c-7df2520d77c8?action=share&creator=11446383&source=collection_link"
	},
	"item": [
		{
			"name": "Add account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Add Account: Successful Response\",()=>pm.response.to.have.status(201))",
							"",
							"pm.test(\"The response has all properties\", () => {",
							"    //parse the response JSON and test three properties",
							"    const responseJson = pm.response.json();",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'))",
							"pm.environment.set(\"lastName\",pm.variables.replaceIn('{{$randomLastName}}'))",
							"pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}').toLowerCase())",
							"pm.environment.set(\"password\",\"Test123@\")",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstName\": \"{{firstName}}\",\n  \"lastName\": \"{{lastName}}\",\n  \"email\": \"{{email}}\",\n  \"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/accounts",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"accounts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"  const jsonData = pm.response.json();",
							"",
							"  pm.test(\"Get Token: Successful Response\",()=>pm.response.to.have.status(200))",
							"",
							"  pm.test(\"Get Token: Response Object contains token\",()=>{",
							"    pm.expect(jsonData).to.have.property(\"token\");",
							"    pm.expect(jsonData.token).to.be.a(\"string\");",
							"  })",
							"  pm.test(\"Get Token: Response contains correctly formatted token\",()=>{",
							"    const splitArray = jsonData.token.split(\" \")",
							"    pm.expect(splitArray[0].toLowerCase()).to.eql(\"bearer\");",
							"    pm.expect(splitArray[1]).length.to.be.greaterThan(25);",
							"    pm.environment.set(\"authToken\",splitArray[1])",
							"  })",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n\"email\": \"{{email}}\",\"password\": \"{{password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/accounts/security/token/",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"accounts",
						"security",
						"token",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Accounts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get Accounts: Successful Response\",()=>pm.response.to.have.status(200))",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/accounts",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"accounts"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get movies",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get Movies: Successful Response\",()=>pm.response.to.have.status(200))",
							"",
							"",
							"pm.test(\"The response has all properties\", () => {",
							"    //parse the response JSON and test three properties",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.results[0].title).to.be.a('string');",
							"    pm.expect(responseJson.results[0].id).to.be.a('number');",
							"    pm.environment.set(\"movieId\",responseJson.results[0].id);",
							"    pm.environment.set(\"movieTitle\", responseJson.results[0].title);",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"Action\", \"id\":16}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/movies",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Movie by iD",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Get Movie By Id Successful Response\",()=>pm.response.to.have.status(200))",
							"",
							"pm.test(\"The response has all properties\", () => {",
							"    //parse the response JSON and test three properties",
							"    const responseJson = pm.response.json();",
							"    pm.expect(responseJson.title).to.eql(pm.environment.get(\"movieTitle\"));",
							"    pm.expect(responseJson.id).to.eql(pm.environment.get(\"movieId\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{authToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/movies/{{movieId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"movies",
						"{{movieId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Movie reviews by movie id Copy",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"author\": \"coconnor\",\n  \"content\": \"test\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/api/movies/{{movieId}}/reviews",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"movies",
						"{{movieId}}",
						"reviews"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Movie reviews by movie id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/movies/{{movieId}}/reviews",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"movies",
						"{{movieId}}",
						"reviews"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add movie favourite",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstName\": \"Cathal\",\n  \"lastName\": \"O'Connor\",\n  \"email\": \"test1@test.com\",\n  \"password\": \"testtestRcom1!\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/accounts/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"accounts",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "set Favourites",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"movieId\": 1234}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/api/accounts/644a8245073308aa62c32b37/favourites",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"accounts",
						"644a8245073308aa62c32b37",
						"favourites"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Favourites",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/api/accounts/644a8245073308aa62c32b37/favourites",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"accounts",
						"644a8245073308aa62c32b37",
						"favourites"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "firstName",
			"value": ""
		},
		{
			"key": "lastName",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "movieId",
			"value": ""
		},
		{
			"key": "authToken",
			"value": ""
		}
	]
}
